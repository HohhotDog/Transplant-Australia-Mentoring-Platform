Index: Mentor-Matching-Platform/client/src/pages/Mentorship/MySessions.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// src/pages/Mentorship/MySessions.js\nimport React from \"react\";\n\n// import { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n\n// import { getMentorshipSessions } from \"../../api/mentorshipApi\";\n// import { getCurrentUser } from \"../../api/userApi\";\n// import { getSessionDetails } from \"../../api/sessionApi\";\n\nconst MySessions = () => {\n  return (\n    <div>\n      <h2>My Sessions</h2>\n        <p>Here you can view and manage your mentorship sessions.</p>\n        {/* Add your Session management logic here */}\n    </div>\n  );\n\n};\nexport default MySessions;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Mentor-Matching-Platform/client/src/pages/Mentorship/MySessions.js b/Mentor-Matching-Platform/client/src/pages/Mentorship/MySessions.js
--- a/Mentor-Matching-Platform/client/src/pages/Mentorship/MySessions.js	(revision f68684071c996f956664e27cb8a0791f3e31b21b)
+++ b/Mentor-Matching-Platform/client/src/pages/Mentorship/MySessions.js	(date 1744951815767)
@@ -1,21 +1,63 @@
 // src/pages/Mentorship/MySessions.js
-import React from "react";
-
-// import { useState, useEffect } from "react";
-// import { useNavigate } from "react-router-dom";
+import React from 'react';
+import { useMySessions } from '../../hooks/useMySessions';
+import SessionCard from '../../components/Session/SessionCard';
 
-// import { getMentorshipSessions } from "../../api/mentorshipApi";
-// import { getCurrentUser } from "../../api/userApi";
-// import { getSessionDetails } from "../../api/sessionApi";
-
+/**
+ * MySessions component displays the sessions the user has applied to,
+ * grouped into "In Progress" and "Approved" sections.
+ */
 const MySessions = () => {
+  const { data, loading, error } = useMySessions();
+
+  // Show loading or error states
+  if (loading) return <div>Loading...</div>;
+  if (error) return <div>Error loading sessions</div>;
+
+  // Separate sessions by status
+  const inProgress = data.filter((session) => session.status === 'in_progress');
+  const approved = data.filter((session) => session.status === 'approved');
+
   return (
-    <div>
-      <h2>My Sessions</h2>
-        <p>Here you can view and manage your mentorship sessions.</p>
-        {/* Add your Session management logic here */}
+    <div className="px-4 py-8 space-y-8">
+    <h1 className="text-3xl font-bold mb-6">My Sessions</h1>
+    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
+    <Section title="In Progress">
+        {inProgress.length ? (
+          inProgress.map((session) => (
+            <SessionCard key={session.id} session={session} />
+          ))
+        ) : (
+          <p>No sessions in progress.</p>
+        )}
+      </Section>
+    </div>
+     
+    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
+      <Section title="Approved">
+        {approved.length ? (
+          approved.map((session) => (
+            <SessionCard key={session.id} session={session} />
+          ))
+        ) : (
+          <p>No approved sessions.</p>
+        )}
+      </Section>
+      </div>
+    </div>
+  );
+};
+
+export default MySessions;
+
+/**
+ * Section component renders a titled section with children elements.
+ */
+const Section = ({ title, children }) => (
+  <div>
+    <h2 className="text-2xl font-semibold mb-4">{title}</h2>
+    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
+      {children}
     </div>
-  );
-
-};
-export default MySessions;
\ No newline at end of file
+  </div>
+);
